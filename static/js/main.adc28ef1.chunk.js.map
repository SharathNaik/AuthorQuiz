{"version":3,"sources":["logo.svg","AuthorQuiz.js","serviceWorker.js","AddAuthorForm.js","index.js"],"names":["module","exports","__webpack_require__","p","Hero","react_default","a","createElement","className","Book","_ref","title","onClick","Turn","_ref2","author","books","highlight","onAnswerSelected","style","background","none","correct","wrong","highlightToBgColor","src","imageUrl","alt","map","key","Continue","_ref3","show","onContinue","Footer","id","href","prototype","PropTypes","shape","name","string","isRequired","imageSource","arrayOf","func","AuthorQuiz","connect","state","turnData","dispatch","answer","type","_ref4","Object","assign","react_router_dom","to","Boolean","window","location","hostname","match","AuthorForm","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","bookTemp","onFieldChange","bind","assertThisInitialized","handleSubmit","handleAddBook","event","preventDefault","onAddAuthor","setState","defineProperty","target","value","concat","onSubmit","htmlFor","onChange","book","React","Component","withRouter","history","push","AddAuthorForm_AuthorForm","authors","getTurnData","allBooks","reduce","c","i","fourRandomBooks","shuffle","slice","sample","find","some","store","Redux","arguments","length","undefined","action","isCorrect","ReactDOM","render","es","Fragment","react_router","exact","path","component","AddAuthorForm","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.adc28ef1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport './bootstrap.min.css';\n\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\n\nimport {connect} from 'react-redux';\n\nfunction Hero(){\n  return(\n    <div className=\"row\">\n      <div className=\"jumbotron col-10 offset-1\">\n        <h1>Author Quiz</h1>\n        <p>Select the Book Selected By Author Shown</p>\n      </div>\n    </div>\n  );\n}\n\n\nfunction Book({title,onClick}){\n  return (\n    <div className=\"answer\" onClick={()=>{onClick(title);}}>\n      <h4>{title}</h4>\n    </div>\n  );\n}\n\nfunction Turn({author,books,highlight,onAnswerSelected}){\n  \n  function highlightToBgColor(highlight){\n    const mapping = {\n      'none':'',\n      'correct':'green',\n      'wrong':'red'\n    };\n\n    return mapping[highlight];\n\n  }\n\n  \n  return(\n    <div className=\"row turn\" style={{background: highlightToBgColor(highlight)}}>\n      <div className=\"col-4 offset-1\">\n        <img src={author.imageUrl} className=\"authorimage\" alt=\"author\" />\n      </div>\n      <div className=\"col-6\">\n        {books.map((title) => <Book title={title} key={title} onClick={onAnswerSelected}></Book>)}\n      </div>\n    </div>\n  );\n}\n\n\n//PropType Validation Start\nTurn.prototype = {\n  author : PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    imageUrl: PropTypes.string.isRequired,\n    imageSource:PropTypes.string.isRequired,\n    books:PropTypes.arrayOf(PropTypes.string).isRequired\n  }),\n  books:PropTypes.arrayOf(PropTypes.string).isRequired,\n  onAnswerSelected:PropTypes.func.isRequired,\n  highlight:PropTypes.string.isRequired\n}\n//PropType Validation End\n\n\n\nfunction Continue({show,onContinue}){\n  return(\n    <div className=\"row continue\">\n    {show\n    ? <div className=\"col-11\">\n        <buttton className=\"btn btn-primary btn-lg float-right\" onClick={onContinue}>Continue</buttton>\n      </div>\n    :\n      null\n    }\n    </div>\n  );\n}\n\n\nfunction Footer(){\n  return(\n    <div id=\"footer\" className=\"row\">\n      <div className=\"col-12\">\n        <p className=\"text-muted credit\">All Images are from <a href=\"https://google.com\">Google</a></p>\n      </div>\n    </div>\n  );\n}\n\n\nfunction mapStateToProps(state){\n  return {\n    turnData:state.turnData,\n    highlight:state.highlight\n  };\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {\n    onAnswerSelected:(answer) =>{\n      dispatch({type:'ANSWER_SELECTED',answer})\n    },\n    onContinue:()=>{\n      dispatch({type:'CONTINUE'})\n    }\n  };\n}\n\nconst AuthorQuiz = connect(mapStateToProps,mapDispatchToProps)(\n  function({turnData,highlight,onAnswerSelected,onContinue}){\n    return (\n      <div className=\"container-fluid\">\n        <Hero/>\n        <Turn {...turnData} highlight={highlight} onAnswerSelected={onAnswerSelected}/>\n        <Continue show={highlight === 'correct'} onContinue={onContinue}/>\n        <p><Link to=\"/add\">Add an Author</Link></p>\n        <Footer />\n      </div>\n    );\n  }\n);\n\nexport default AuthorQuiz;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nimport \"./AddAuthorForm.css\";\r\n\r\n\r\nclass AuthorForm extends React.Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            name :'',\r\n            imageUrl:'',\r\n            books:[],\r\n            bookTemp:''\r\n        }\r\n\r\n        this.onFieldChange = this.onFieldChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleAddBook = this.handleAddBook.bind(this);\r\n    }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n\r\n        this.props.onAddAuthor(this.state);\r\n    }\r\n\r\n    onFieldChange(event){\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        });\r\n    }\r\n\r\n    handleAddBook(event){\r\n        this.setState({\r\n            books:this.state.books.concat([this.state.bookTemp]),\r\n            bookTemp:''\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <div className=\"AddAuthorForm__input\">\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.onFieldChange}></input>\r\n                </div>\r\n\r\n                <div className=\"AddAuthorForm__input\">\r\n                    <label htmlFor=\"imageUrl\">Image URL</label>\r\n                    <input type=\"text\" name=\"imageUrl\" value={this.state.imageUrl} onChange={this.onFieldChange}></input>\r\n                </div>\r\n\r\n                <div className=\"AddAuthorForm__input\">\r\n                    {this.state.books.map((book)=> <p key={book}>{book}</p>)}\r\n                    <label htmlFor=\"bookTemp\">Books</label>\r\n                    <input type=\"text\" name=\"bookTemp\" value={this.state.bookTemp} onChange={this.onFieldChange}></input>\r\n                    <input type=\"button\" value=\"+\" onClick={this.handleAddBook}></input>\r\n                </div>\r\n\r\n                <input type=\"Submit\" value=\"Add\"></input>\r\n            </form>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction AddAuthorForm({match,onAddAuthor}){\r\n\treturn (\r\n\t\t<div className=\"AddAuthorForm\" >\r\n\t\t\t<h1>Add Author</h1>\r\n\t\t\t\r\n            <AuthorForm onAddAuthor={onAddAuthor}/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch,props){\r\n    return {\r\n        onAddAuthor: (author) =>{\r\n            dispatch({type:'ADD_AUTHOR',author});\r\n            props.history.push('/');\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(connect(()=>{},mapDispatchToProps)(AddAuthorForm));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AuthorQuiz from './AuthorQuiz';\nimport * as serviceWorker from './serviceWorker';\n\nimport {shuffle,sample} from 'underscore';\nimport {BrowserRouter,Route,withRouter} from 'react-router-dom';\nimport * as Redux from 'redux';\nimport * as ReactRedux from 'react-redux';\n\n\nimport AddAuthorForm from './AddAuthorForm'\n\nconst authors = [\n    {\n\t\tname: 'Mark Twain',\n\t\timageUrl: 'images/authors/marktwain.jpg',\n\t\timageSource: 'Wikimedia Commons',\n\t\tbooks: [ 'The Adventures of Huckleberry Finn' ]\n\t},\n\t{\n\t\tname: 'Joseph Conrad',\n\t\timageUrl: 'images/authors/marktwain.jpg',\n\t\timageSource: 'Wikimedia Commons',\n\t\tbooks: ['Heart of Darkness']\n\t},\n\t{\n\t\tname: 'J.K. Rowling',\n\t\timageUrl: 'images/authors/jkrowling.jpg',\n\t\timageSource: 'Wikimedia Commons',\n\t\tbooks: ['Harry Potter and the Sorcerers Stone']\n\t},\n\t{\n\t\tname: 'Stephen King',\n\t\timageUrl: 'images/authors/stephenking.jpg',\n\t\timageSource: 'Wikimedia Commons',\n\t\tbooks: ['The Shining', 'IT']\n\t},\n\t{\n\t\tname: 'Charles Dickens',\n\t\timageUrl: 'images/authors/charlesdickens.jpg',\n\t\timageSource: 'Wikimedia Commons',\n\t\tbooks: ['David Copperfield', 'A Tale of Two Cities']\n\t},\n\t{\n\t\tname: 'William Shakespeare',\n\t\timageUrl: 'images/authors/williamshakespeare.jpg',\n\t\timageSource: 'Wikimedia Commons',\n\t\tbooks: ['Hamlet', 'Macbeth', 'Romeo and Juliet']\n\t}\n];\n\nfunction getTurnData(authors){\n    const allBooks = authors.reduce(function(p,c,i){\n        return p.concat(c.books);\n    },[]);\n\n    const fourRandomBooks = shuffle(allBooks).slice(0,4);\n    const answer = sample(fourRandomBooks);\n\n    return {\n        books : fourRandomBooks,\n        author : authors.find((author) => author.books.some((title) => title === answer))\n    }\n\n}\n\n\nfunction reducer(state = {authors,turnData:getTurnData(authors),highlight:''},action){\n\tswitch(action.type){\n\t\tcase 'ANSWER_SELECTED':\n\t\t\tconst isCorrect = state.turnData.author.books.some((book) => book === action.answer);\n\t\t\treturn Object.assign(\n\t\t\t\t{},\n\t\t\t\tstate,\n\t\t\t\t{\n\t\t\t\t\thighlight:isCorrect?'correct':'wrong'\n\t\t\t\t}\n\t\t\t)\n\t\tcase 'CONTINUE':\n\t\t\treturn Object.assign(\n\t\t\t\t{},\n\t\t\t\tstate,\n\t\t\t\t{\n\t\t\t\t\thighlight:'',\n\t\t\t\t\tturnData: getTurnData(state.authors)\n\t\t\t\t}\n\t\t\t)\n\t\tcase 'ADD_AUTHOR':\n\t\t\treturn Object.assign(\n\t\t\t\t{},\n\t\t\t\tstate,\n\t\t\t\t{\n\t\t\t\t\tauthors:state.authors.concat([action.author])\n\t\t\t\t}\n\t\t\t)\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nlet store = Redux.createStore(reducer);\n\n\n\n//Adding Routing to App Component\nReactDOM.render(<BrowserRouter>\n\t\t\t\t\t<ReactRedux.Provider store={store}>\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t<Route exact path=\"/\" component={AuthorQuiz}/>\n\t\t\t\t\t\t\t<Route path=\"/add\" component={AddAuthorForm}/>\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t</ReactRedux.Provider>\n\t\t\t\t</BrowserRouter>\n\t\t\t\t, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}